{"version":3,"sources":["../../dist/src/utils/Math.js"],"names":["Object","defineProperty","exports","value","imul","a","b","c","d","smi","i32"],"mappings":"AAAA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,SAASC,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AAChBD,QAAIA,IAAI,CAAR,CADgB,CACL;AACXC,QAAIA,IAAI,CAAR,CAFgB,CAEL;AACX,QAAIC,IAAIF,IAAI,MAAZ;AACA,QAAIG,IAAIF,IAAI,MAAZ;AACA;AACA,WAAQC,IAAIC,CAAL,IAAa,CAACH,MAAM,EAAP,IAAaG,CAAb,GAAiBD,KAAKD,MAAM,EAAX,CAAlB,IAAqC,EAAtC,KAA8C,CAAzD,IAA8D,CAArE,CANgB,CAMwD;AAC3E;AACDJ,QAAQE,IAAR,GAAeA,IAAf;AACA;AACA;AACA;AACA;AACA,SAASK,GAAT,CAAaC,GAAb,EAAkB;AACd,WAASA,QAAQ,CAAT,GAAc,UAAf,GAA8BA,MAAM,UAA3C;AACH;AACDR,QAAQO,GAAR,GAAcA,GAAd;AACA","file":"Math.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction imul(a, b) {\n    a = a | 0; // int\n    b = b | 0; // int\n    let c = a & 0xffff;\n    let d = b & 0xffff;\n    // Shift by 0 fixes the sign on the high part.\n    return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n}\nexports.imul = imul;\n// v8 has an optimization for storing 31-bit signed numbers.\n// Values which have either 00 or 11 as the high order bits qualify.\n// This function drops the highest order bit in a signed number, maintaining\n// the sign bit.\nfunction smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n}\nexports.smi = smi;\n//# sourceMappingURL=Math.js.map"]}